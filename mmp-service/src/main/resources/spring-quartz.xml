<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 工作的bean -->
    <bean id="accountJob" class="com.cn.mis.timetask.AccountTimeTask"/>
    <bean id="userJob" class="com.cn.mis.timetask.UserTimeTask"/>
    <bean id="mailJob" class="com.cn.mis.timetask.MailTimeTask"/>
    <bean id="syncOAJob" class="com.cn.mis.timetask.SyncOATimeTask"/>
    <bean id="allAccountJob" class="com.cn.mis.timetask.AllAccountTimeTask"/>
    <bean id="xcAccountJob" class="com.cn.mis.timetask.XCAccountTimeTask"/>
    <bean id="xcApprovalJob" class="com.cn.mis.timetask.XCApprovalTimeTask"/>
    <bean id="xcFOSettlementsJob" class="com.cn.mis.timetask.XCFlightOrderSettlementsTimeTask"/>
    <bean id="paymentJob" class="com.cn.mis.timetask.PaymentTimeTask"/>
    <bean id="syncInfaceJob" class="com.cn.mis.timetask.InfaceTimeTask"/>
    <bean id="vendorJob" class="com.cn.mis.timetask.VendorTimeTask"/>

    <!-- job的配置开始 -->
    <bean id="accountJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="accountJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="userJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="userJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="mailJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="mailJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="syncOADetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="syncOAJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>

    <bean id="allAccountJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="allAccountJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="xcAccountJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="xcAccountJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="xcApprovalJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="xcApprovalJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="paymentJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="paymentJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="xcFOSettlementsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="xcFOSettlementsJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="syncInfaceJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="syncInfaceJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>
    <bean id="vendorJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
            <ref bean="vendorJob" />
        </property>
        <property name="targetMethod">
            <value>run</value>
        </property>
        <!--false表示等上一个任务执行完后再开启新的任务 -->
        <property name="concurrent" value="false" />
    </bean>

    <!-- 调度的配置开始 -->
    <!-- Cron表达式“10 */1 * * * ?”意为：从10秒开始，每1分钟执行一次。  -->
    <bean id="crontestUserJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="userJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 0 1 * * ?</value>
        </property>
    </bean>
    <bean id="crontestAccount8_20JobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="accountJobDetail" />
        </property>
        <property name="cronExpression">
            <value>*/10 * 8-20 * * ?</value>
        </property>
    </bean>
    <bean id="crontestAccount20_24JobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="accountJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 20-0 * * ?</value>
        </property>
    </bean>
    <bean id="crontestAccount0_8JobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="accountJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */3  0-8 * * ?</value>
        </property>
    </bean>
    <bean id="mailJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="mailJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 * * * ?</value>
        </property>
    </bean>
    <bean id="syncOAJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="syncOADetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 * * * ?</value>
        </property>
    </bean>
    <bean id="allAccountJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="allAccountJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 0 0 */1 * ?</value>
            <!--<value>10 * * * * ?</value>-->
        </property>
    </bean>
    <bean id="xcAccountJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="xcAccountJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 0 0 */1 * ?</value>
        </property>
    </bean>
    <bean id="xcApprovalJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="xcApprovalJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 * * * ?</value>
        </property>
    </bean>
    <bean id="userJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="userJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 0 0 */1 * ?</value>
        </property>
    </bean>
    <bean id="xcFOSettlementsJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="xcFOSettlementsJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 59 23 L * ?</value>
        </property>
    </bean>
    <bean id="paymentJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="paymentJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 * * * ?</value>
        </property>
    </bean>
    <bean id="syncInfaceJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="syncInfaceJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 * * * ?</value>
        </property>
    </bean>
    <bean id="vendorJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <ref bean="vendorJobDetail" />
        </property>
        <property name="cronExpression">
            <value>0 */1 * * * ?</value>
        </property>
    </bean>

    <!-- 启动触发器的配置开始 -->
    <bean name="startQuertz" lazy-init="false" autowire="no"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <!--<ref bean="crontestAccount8_20JobTrigger" />-->
                <!--<ref bean="crontestAccount20_24JobTrigger" />-->
                <!--<ref bean="crontestAccount0_8JobTrigger" />-->
                <!--<ref bean="allAccountJobTrigger"/>-->
                <!--<ref bean="userJobTrigger" />-->
                <ref bean="syncOAJobTrigger" />
                <!--<ref bean="xcAccountJobTrigger"/>-->
                <!--<ref bean="xcApprovalJobTrigger"/>-->
                <!--<ref bean="xcFOSettlementsJobTrigger"/>-->
                <!--<ref bean="paymentJobTrigger"/>-->
                <!--<ref bean="vendorJobTrigger"/>-->
                <!--<ref bean="syncInfaceJobTrigger"/>-->
            </list>
        </property>
    </bean>
</beans>